//package Exp;
//___________________________________________ ОПЕРАТОРЫ ЦИКЛА _________________________________________________________
//  ЦИКЛ - разновидность управляющей конструкции в высокоуровневых языках программирования, предназначенная для
//      организации многократного исполнения набора инструкций.
//  Также циклом может называться любая многократно исполняемая последовательность инструкций, организованная
//      любым способом (например, с помощью условного перехода).

//      Последовательность инструкций, предназначенная для многократного исполнения, называется телом цикла.
//      Единичное выполнение тела цикла называется итерацией.
//      Выражение определяющее, будет в очередной раз выполняться итерация, или цикл завершится, называется условием
//      выхода или условием окончания цикла (либо условием продолжения в зависимости от того, как интерпретируется его
//      истинность - как признак необходимости завершения или продолжения цикла).
//      Переменная, хранящая текущий номер итерации, называется счётчиком итераций цикла или просто счётчиком цикла.
//      Цикл не обязательно содержит счётчик, счётчик не обязан быть один - условие выхода из цикла может зависеть
//      от нескольких изменяемых в цикле переменных, а может определяться внешними условиями (например, наступлением
//      определённого времени), в последнем случае счётчик может вообще не понадобиться.
//_____________________________________________________________________________________________________________________
//_______________________________________________ ВИДЫ ЦИКЛОВ _________________________________________________________
//
//      В информатике используются следующие разновидности операторов цикла.
//
//  ЦИКЛ С ПРЕДУСЛОВИЕМ - цикл, который выполняется пока истинно некоторое условие, указанное перед его началом. Это
//      условие проверяется до выполнения тела цикла, поэтому тело может быть не выполнено ни разу (если условие с
//      самого начала ложно).
//  ЦИКЛ С ПОСТУСЛОВИЕМ - цикл, в котором  условие проверяется после выполнения тела цикла. Отсюда следует, что тело
//      всегда выполняется хотя бы один раз.
//  ЦИКЛ СО СЧЁТЧИКОМ - цикл, в котором некоторая переменная изменяет своё значение от заданного начального значения
//      до конечного значения с некоторым шагом, и для каждого значения этой переменной тело цикла выполняется один раз.
//
//_____________________________________________________________________________________________________________________
//_______________________________________ ЦИКЛ С ПРЕДУСЛОВИЕМ - while _________________________________________________
//  Сначала проверяется условие, потом выполняется блок операторов.
//
//  ___Структура записи в Java:___

//  while(Логическое условие){
//      Блок операторов
//  }
//_____________________________________________________________________________________________________________________
//________________________________________ ЦИКЛ С ПОСТУСЛОВИЕМ do - while _____________________________________________
//  Сначала выполняется блок операторов, потом проверяется условие.
//
//  ___Структура записи в Java:___
//
//  do{
//      Блок операторов
//  } while (Логическое условие)
//
//_____________________________________________________________________________________________________________________
//__________________________________________ ЦИКЛ СО СЧЁТЧИКОМ FOR ____________________________________________________
//  Количество итераций заведомо известно.
//
//  ___Структура записи в Java:___
//
//  for(инициализация; Логическое Условие; приращение) {
//      блок операторов
//  }
//
//______________________________________ ЦИКЛ СО СЧЁТЧИКОМ FOR - более подробный взгляд _______________________________
//
//      for (_1_; _2_; _3_)
//  _1_ - Не обязательно объявлять переменную цикла.
//  _2_ - Условие не обязательно связано с переменной цикла. Или вообще отсутствует.
//  _3_ - Приращения может и не быть. Также может выполняться 2 и более действия.
//
//  !!! Строго говоря цикл for - может легко заменить цикл while и do-while.
//
//  !!! В теле цикла for знаначение переменной счётчика изменяться не должно.
//      (Изменяться может только в _3_)
//_____________________________________________________________________________________________________________________
//_____________________________________________________________________________________________________________________
//__________________________________________ ВЛОЖЕННЫЕ ЦИКЛЫ __________________________________________________________
//
//      Как и в случае вложенных условных операторов, циклы также могут быть вложены друг в друга.
//      Наибольшее распространение получили вложенные циклы for.
//      В основном потому, что именно они используются для прохода по двумерным массивам.
//
//      for (инициализация; Логическое Условие; приращение) {       // Внешний цикл
//          операторы
//          ...
//          for (инициализация; Логическое Условие; приращение) {   // Внутренний цикл
//              блок операторов
//          }
//          ...
//      }
//  !!! Следует помнить правило - за одну итерацию внешнего цикла, внутренний пройдет все свои итерации.
//_____________________________________________________________________________________________________________________
//
//__________________________________________ ОПЕРАТОРЫ ПРЕРЫВАНИЯ ЦИКЛА _______________________________________________
//
//      Иногда необходимо досрочно прекратить выполнение итерации цикла или закончить цикл совсем.
//      Для этого используют операторы:
//       * continue - прекращает итерацию цикла. (Не прерывает цикл, а только прерывает текущую итерацию).
//       * break - завершает цикл.
//      Continue и break должны быть только в телеле условного оператора.
//
//  !!! Внимание оператор break прерывает только цикл из которого он был вызван.
//_____________________________________________________________________________________________________________________
//_____________________________________________________________________________________________________________________

//import java.util.Scanner;
//
//public class Java_Cycle {
//    public static void main(String[] args) {
////_______________________________________ ЦИКЛ While ________________________________________________________________
//// Вывести от 1 до 10.
//        int n = 1;
//
//        while (n <= 10) {
//            System.out.println(n);
//            n = n + 1;                   // Счетчик
//        }
//    }
//_____________________________________________________________________________________________________________________

//    public static void main(String[] args) {
////_______________________________________ ЦИКЛ Do-While _____________________________________________________________
//// Вывести от 1 до 10.
//        int n = 1;
//        do {
//            System.out.println(n);
//            n = n + 1;                   // Счетчик.
//        } while (n <= 10);
//
//    }
//_____________________________________________________________________________________________________________________

//    public static void main(String[] args) {
////__________________________________________ ЦИКЛ FOR _______________________________________________________________
//// Вывести от 1 до 10.
//
//        for (int i = 1; i <= 10; i++) {
//            System.out.println(i);
//        }
//    }
//_____________________________________________________________________________________________________________________

//    public static void main(String[] args) {
////________________________ Для "ЦИКЛ СО СЧЁТЧИКОМ FOR - более подробный взгляд". ____________________________________
//        int n = 1;
//        for (; n <= 10;) {
//            System.out.println(n);
//            n = n + 1;
//        }
//    }
//_____________________________________________________________________________________________________________________

//    public static void main(String[] args) {
////        Пользователь с клавиатуры вводит два целых числа.
////        int s = 3
////        int e = 7
////        Проверить, что конечное число болье начального.
////        Если это верно, перебрать все  целые числа от начального до конечного с шагом 1
////        и посчитать сумму тех чисел которые кратны 3
//
//        Scanner sc = new Scanner(System.in);
//        int start;          // Начальное число
//        int end;            // Конечное число.
//        int sum = 0;        // Переменная для хранения суммы. Начальная сумма равна 0.
//
//        System.out.println("Input start");
//        start = sc.nextInt();               //Считывание значения числа
//        System.out.println("Input end");
//        end = sc.nextInt();
//        if (end>start) {
//            for (int i = start; i <= end; i++){
//                if(i%3==0){
//                    sum=sum+i;
//                }
//            }
//            System.out.println("sum="+sum);
//        }else {
//            System.out.println("Ошибка ввода");
//        }
//    }
//_____________________________________________________________________________________________________________________

//    public static void main(String[] args) {
//        Повторить столько раз звездочку какому числу равна переменная w.
//        Вывести в линию.
//          * * * *
//        Scanner sc = new Scanner(System.in);    // Считывание с клавиатуры.
//        int w;                                  // Объявление переменной
//        System.out.println("input w");
//        w = sc.nextInt();
//
//        for(int j = 1; j <= w; j++) {
//            System.out.print("*");
//        }
//        System.out.println();   // Переход на новую строку.
//    }
//_____________________________________________________________________________________________________________________

//    public static void main(String[] args) {        // ВЛОЖЕННЫЕ ЦИКЛЫ
////        Считываем две переменные w = 4 и h = 3
////        Нужно вывести на экран:
////      * * * *
////      * * * *
////      * * * *
//        Scanner sc = new Scanner(System.in);    // Считывание с клавиатуры.
//        int w;                                  // Объявление переменной.
//        int h;                                  // Объявление переменной.
//        System.out.println("input w");
//        w = sc.nextInt();
//        System.out.println("input h");
//        h = sc.nextInt();
//
//        for (int i = 1; i <= h; i++) {            // строки
//            for (int j = 1; j <= w; j++) {        // столбцы
//                System.out.print("*");
//            }
//            System.out.println();
//        }
//    }
//_____________________________________________________________________________________________________________________

//    public static void main(String[] args) {         // ВЛОЖЕННЫЕ ЦИКЛЫ
////        С клавиатуры вводится целое число h = 4
////        Нужно нарисовать трамплин для "Марио"
////          _ _ _ * *
////          _ _ * * *
////          _ * * * *
////          * * * * *
//
//        Scanner sc = new Scanner(System.in);
//        int h;
//        System.out.println("Input h");
//        h = sc.nextInt();
//
//        for (int i = 1; i <= h; i++) {
//            for (int j = 1; j <= h + 1; j++) {
//                if (j <= h - i) {
//                    System.out.print(" ");
//                } else {
//                    System.out.print("*");
//                }
//            }
//            System.out.println();
//        }
//    }
//_____________________________________________________________________________________________________________________
////______________________________ ПРИМЕР использования операторов continue и break. __________________________________
//
//    public static void main(String[] args) {
//        int n = 10;
//        for (int i = 0; i < n; i++) {
//            if (i == 3) {               // 3-я итерация пропускается.
//                continue;
//            }
//            if (i == 7) {               // На 7-й цикл прекратиться
//                break;
//            }
//            System.out.println(i);      // 0 1 2 4 5 6
//        }
//    }
////_____________________________________________________________________________________________________________________
//
//}
